# setup.cfg
[metadata]
name = my-python-project-template  ; This will be overwritten by pyscaffold's 'name'
version = 0.0.1                   ; This will be overwritten by pyscaffold's 'version'
description = A template for new Python projects.
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/username_here/my-python-project-template ; Update this
author = Your Name
author_email = your.email@example.com
license = MIT License             ; Example license, choose what you prefer
license_file = LICENSE            ; Assumes you'll have a LICENSE file
classifiers =
    Programming Language :: Python :: 3
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent

[options]
packages = find:
install_requires =
    # Add common dependencies here that all your projects might need
    # For example:
    # requests
python_requires = >=3.9
include_package_data = True
zip_safe = False

[options.packages.find]
where = src

[options.entry_points]
# If you have common console scripts or GUI scripts, define them here
# console_scripts =
#     my-script = my_project.cli:main

[options.extras_require]
# Define optional dependencies for development, testing, etc.
dev =
    pytest
    black
    flake8
    mypy
test =
    pytest
    pytest-cov

[options.package_data]
# Include non-code files in your package
# my_package = py.typed

[pyscaffold]
# pyscaffold specific options can go here.
# For example, to always use a specific license:
# license = MIT
# Or to include certain pyscaffold extensions by default:
# extensions = dsproject, nox

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this pytest issue.
addopts =
    --cov=devai --cov-report=html
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests